# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

###
### Test routes
###
GET     /test/scenarios                          controllers.website.nonproduction.ScenarioController.list
GET     /test/scenarios/clear                    controllers.website.nonproduction.ScenarioController.clear
GET     /test/scenarios/:urlSlug                 controllers.website.nonproduction.ScenarioController.scenario(urlSlug: String)
GET     /test/log-stuff-then-die                 controllers.website.nonproduction.TestControllers.logStuffThenThrowException
GET     /test/throwError                         controllers.website.nonproduction.TestControllers.throwError(error: String)

###
### Production routes
###

##
## Defaults
##

# Need this TRUE conditional, otherwise the if (play.id == test) conditional from above
# applies to ALL THE REST OF THE ROUTES.
#%{ if (true) }%

# Home page
GET     /blob/files/*blobKey                                       controllers.WebsiteControllers.getBlob(blobKey: String)

# Map static resources from the /app/public folder to the /public path
#GET     /public/                                staticDir:public
GET     /favicon.ico                            controllers.Assets.at(path="/public", file="images/favicon.ico")
GET     /robots.txt                             controllers.Assets.at(path="/public", file="robots.txt")
GET     /sitemap.txt                            controllers.Assets.at(path="/public", file="sitemap.txt")
GET     /documents/CelebrityAgreement           controllers.Assets.at(path="/public", file="documents/CelebrityAgreement.pdf")

##
## API
##
GET     /api/1.0/client                                         controllers.ApiControllers.getIOSClient(redirectToItmsLink: Boolean ?= false)
GET     /api/1.0/celebrities/me                                 controllers.ApiControllers.getCelebrity
GET     /api/1.0/celebrities/me/enrollmenttemplate              controllers.ApiControllers.getCelebrityEnrollmentTemplate
GET     /api/1.0/celebrities/me/mobileappinfo                   controllers.ApiControllers.getCelebrityMobileAppInfo
GET     /api/1.0/celebrities/me/products                        controllers.ApiControllers.getCelebrityProducts
GET     /api/1.0/celebrities/me/orders                          controllers.ApiControllers.getCelebrityOrders(signerActionable:Option[Boolean] ?= None)
POST    /api/1.0/celebrities/me/enrollmentsamples               controllers.ApiControllers.postEnrollmentSample
POST    /api/1.0/celebrities/me/orders/$orderId<[0-9]+>         controllers.ApiControllers.postCelebrityOrder(orderId:Long)
POST    /api/1.0/celebrities/me/orders/$orderId<[0-9]+>/egraphs controllers.ApiControllers.postEgraph(orderId:Long)
POST    /api/1.0/celebrities/me/videoasset                      controllers.ApiControllers.postVideoAsset                   

##
## Admin
##
GET      /admin                                                           controllers.WebsiteControllers.getRootAdmin
GET      /admin/accounts                                                  controllers.WebsiteControllers.getAccountsAdmin
POST     /admin/accounts                                                  controllers.WebsiteControllers.postAccountAdmin
GET      /admin/accounts/$accountId<[0-9]+>                               controllers.WebsiteControllers.getAccountAdmin(accountId: Long)
GET      /admin/celebrities                                               controllers.WebsiteControllers.getCelebritiesAdmin
POST     /admin/celebrities                                               controllers.WebsiteControllers.postCreateCelebrityAdmin
GET      /admin/celebrities/search                                        controllers.WebsiteControllers.getCelebritiesBySearchAdmin
POST      /admin/celebrities/search/rebuild                               controllers.WebsiteControllers.postRebuildSearchIndex
GET      /admin/celebrities/create                                        controllers.WebsiteControllers.getCreateCelebrityAdmin
POST     /admin/celebrities/featured                                      controllers.WebsiteControllers.postFeaturedCelebrities
GET      /admin/celebrities/$celebrityId<[0-9]+>                          controllers.WebsiteControllers.getCelebrityAdmin(celebrityId: Long)
POST     /admin/celebrities/$celebrityId<[0-9]+>                          controllers.WebsiteControllers.postCelebrityAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/egraphs                  controllers.WebsiteControllers.getCelebrityEgraphsAdmin(celebrityId: Long)
POST     /admin/celebrities/$celebrityId<[0-9]+>/categoryvalues           controllers.WebsiteControllers.postCelebrityCategoryValueAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/inventorybatches         controllers.WebsiteControllers.getCelebrityInventoryBatchesAdmin(celebrityId: Long)
POST     /admin/celebrities/$celebrityId<[0-9]+>/inventorybatches         controllers.WebsiteControllers.postCreateInventoryBatchAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/inventorybatches/create  controllers.WebsiteControllers.getCreateCelebrityInventoryBatchAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/orders                   controllers.WebsiteControllers.getCelebrityOrdersAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/products                 controllers.WebsiteControllers.getCelebrityProductsAdmin(celebrityId: Long)
POST     /admin/celebrities/$celebrityId<[0-9]+>/products                 controllers.WebsiteControllers.postCreateProductAdmin(celebrityId: Long)
GET      /admin/celebrities/$celebrityId<[0-9]+>/products/create          controllers.WebsiteControllers.getCreateCelebrityProductAdmin(celebrityId: Long)
POST     /admin/celebrities/$celebrityId<[0-9]+>/sendEmail                controllers.WebsiteControllers.postSendCelebrityWelcomeEmailAdmin(celebrityId: Long)
GET      /admin/egraphs                                                   controllers.WebsiteControllers.getEgraphsAdmin
GET      /admin/egraphs/$egraphId<[0-9]+>                                 controllers.WebsiteControllers.getEgraphAdmin(egraphId: Long, action: String ?= "")
POST     /admin/egraphs/$egraphId<[0-9]+>                                 controllers.WebsiteControllers.postEgraphAdmin(egraphId: Long)
GET      /admin/freegraphs/create                                         controllers.WebsiteControllers.getCreateFreegraphAdmin
POST     /admin/freegraphs/create                                         controllers.WebsiteControllers.postFreegraphAdmin
GET      /admin/categories                                                controllers.WebsiteControllers.getCategoriesAdmin
POST     /admin/categories                                                controllers.WebsiteControllers.postCategoryAdmin
GET      /admin/categories/create                                         controllers.WebsiteControllers.getCreateCategoryAdmin
GET      /admin/categories/$categoryId<[0-9]+>                            controllers.WebsiteControllers.getCategoryAdmin(categoryId: Long)
GET      /admin/categories/$categoryId<[0-9]>/categoryvalues/create       controllers.WebsiteControllers.getCreateCategoryValueAdmin(categoryId: Long)
POST     /admin/categoryvalues                                            controllers.WebsiteControllers.postCategoryValueAdmin
GET      /admin/coupons                                                   controllers.WebsiteControllers.getCouponsAdmin
POST     /admin/coupons                                                   controllers.WebsiteControllers.postCreateCouponAdmin
GET      /admin/coupons/create                                            controllers.WebsiteControllers.getCreateCouponAdmin
GET      /admin/coupons/$couponId<[0-9]+>                                 controllers.WebsiteControllers.getCouponAdmin(couponId: Long)
POST     /admin/coupons/$couponId<[0-9]+>                                 controllers.WebsiteControllers.postCouponAdmin(couponId: Long)
GET      /admin/categoryvalues/$categoryValueId<[0-9]+>                   controllers.WebsiteControllers.getCategoryValueAdmin(categoryValueId: Long)
GET      /admin/inventorybatches/$inventoryBatchId<[0-9]+>                controllers.WebsiteControllers.getInventoryBatchAdmin(inventoryBatchId: Long)
POST     /admin/inventorybatches/$inventoryBatchId<[0-9]+>                controllers.WebsiteControllers.postInventoryBatchAdmin(inventoryBatchId: Long)
GET      /admin/login                                                     controllers.WebsiteControllers.getLoginAdmin
POST     /admin/login                                                     controllers.WebsiteControllers.postLoginAdmin
GET      /admin/orders                                                    controllers.WebsiteControllers.getOrdersAdmin
GET      /admin/orders/$orderId<[0-9]+>                                   controllers.WebsiteControllers.getOrderAdmin(orderId: Long)
POST     /admin/orders/$orderId<[0-9]+>                                   controllers.WebsiteControllers.postOrderAdmin(orderId: Long)
GET      /admin/products/$productId<[0-9]+>                               controllers.WebsiteControllers.getProductAdmin(productId: Long)
POST     /admin/products/$productId<[0-9]+>                               controllers.WebsiteControllers.postProductAdmin(productId: Long)
GET      /admin/reports                                            				controllers.WebsiteControllers.getReportsAdmin
GET      /admin/tools                                              				controllers.WebsiteControllers.getToolsAdmin
GET      /admin/videoasset                                                controllers.WebsiteControllers.getVideoAssetAdmin
GET      /admin/videoassets                                               controllers.WebsiteControllers.getVideoAssetsAdmin
GET      /admin/videoassets/:status                                       controllers.WebsiteControllers.getVideoAssetsWithStatusAdmin(status: String)
POST     /admin/videoassets/$id<[0-9]+>                                   controllers.WebsiteControllers.postProcessVideoAdmin(action: String, id: Long)											

##
## Consumer Website
##

GET     /                                                           controllers.WebsiteControllers.getRootConsumerEndpoint
GET     /about                                                      controllers.WebsiteControllers.getAbout
GET     /account/settings                                           controllers.WebsiteControllers.getAccountSettings
POST    /account/settings                                           controllers.WebsiteControllers.postAccountSettings
GET     /account/recover                                            controllers.WebsiteControllers.getRecoverAccount
POST    /account/recover                                            controllers.WebsiteControllers.postRecoverAccount
GET     /account/reset                                              controllers.WebsiteControllers.getResetPassword(email: String, secretKey: String)
POST    /account/reset                                              controllers.WebsiteControllers.postResetPassword
GET     /account/verify                                             controllers.WebsiteControllers.getVerifyAccount(email: String, resetKey: String)
GET     /account/:galleryCustomerId/gallery                         controllers.WebsiteControllers.getCustomerGalleryById(galleryCustomerId: Long)
GET     /account/:username                                          controllers.WebsiteControllers.getCustomerGalleryByUsername(username: String)
GET     /affiliates                                                 controllers.WebsiteControllers.getAffiliates
#GET     /careers                                                    controllers.WebsiteControllers.getCareers
GET     /egraph/$orderId<[0-9]+>                                    controllers.WebsiteControllers.getEgraphRedirect(orderId: Long)
GET     /$orderId<[0-9]+>                                           controllers.WebsiteControllers.getEgraph(orderId: Long)
GET     /facebooklogin/callback                                     controllers.WebsiteControllers.getFacebookLoginCallback
GET     /faq                                                        controllers.WebsiteControllers.getFAQ
GET     /inside-an-egraph                                           controllers.WebsiteControllers.getInsideEgraph
GET     /login                                                      controllers.WebsiteControllers.getLogin
POST    /login                                                      controllers.WebsiteControllers.postLogin
GET     /logout                                                     controllers.WebsiteControllers.getLogout
POST    /logout                                                     controllers.WebsiteControllers.postLogout
GET     /stars                                                      controllers.WebsiteControllers.getMarketplaceResultPage
##GET     /celebrities/:verticalname                                  controllers.WebsiteControllers.getMarketplaceVerticalPage(verticalname: String)
GET     /orders/$orderId<[0-9]+>/confirm                            controllers.WebsiteControllers.getOrderConfirmation(orderId: Long)
POST    /orders/$orderId<[0-9]+>/configure                          controllers.WebsiteControllers.postOrderPrivacy(orderId: Long)
GET     /privacy                                                    controllers.WebsiteControllers.getPrivacy
POST    /register                                                   controllers.WebsiteControllers.postRegisterConsumerEndpoint
POST    /subscribe                                                  controllers.WebsiteControllers.postSubscribeEmail
GET     /sweepstakes/insider                                        controllers.WebsiteControllers.getInsiderSweepstakes
GET     /terms                                                      controllers.WebsiteControllers.getTerms

GET     /:celebrityUrlSlug                                          controllers.WebsiteControllers.getCelebrityLanding(celebrityUrlSlug: String)
GET     /:celebrityUrlSlug/photos                                   controllers.WebsiteControllers.getStorefrontChoosePhotoTiled(celebrityUrlSlug: String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug                   controllers.WebsiteControllers.getStorefrontChoosePhotoCarousel(celebrityUrlSlug: String, productUrlSlug:String)
POST    /:celebrityUrlSlug/photos/:productUrlSlug                   controllers.WebsiteControllers.postStorefrontChoosePhoto(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/personalize       controllers.WebsiteControllers.getStorefrontPersonalize(celebrityUrlSlug: String, productUrlSlug:String)
POST    /:celebrityUrlSlug/photos/:productUrlSlug/personalize       controllers.WebsiteControllers.postStorefrontPersonalize(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/review            controllers.WebsiteControllers.getStorefrontReview(celebrityUrlSlug: String, productUrlSlug:String)
POST    /:celebrityUrlSlug/photos/:productUrlSlug/review            controllers.WebsiteControllers.postStorefrontReview(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/checkout          controllers.WebsiteControllers.getStorefrontCheckout(celebrityUrlSlug: String, productUrlSlug:String)
POST    /:celebrityUrlSlug/photos/:productUrlSlug/checkout          controllers.WebsiteControllers.postStorefrontCheckout(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/finalize          controllers.WebsiteControllers.getStorefrontFinalize(celebrityUrlSlug: String, productUrlSlug:String)
POST    /:celebrityUrlSlug/photos/:productUrlSlug/finalize          controllers.WebsiteControllers.postStorefrontFinalize(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/cc-error          controllers.WebsiteControllers.getStorefrontCreditCardError(celebrityUrlSlug: String, productUrlSlug:String, creditCardMsg: Option[String] ?= None)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/no-inventory      controllers.WebsiteControllers.getStorefrontNoInventory(celebrityUrlSlug: String, productUrlSlug:String)
GET     /:celebrityUrlSlug/photos/:productUrlSlug/purchase-error    controllers.WebsiteControllers.getStorefrontPurchaseError(celebrityUrlSlug: String, productUrlSlug:String)

##
## Admin Restricted Functionality - We want to keep certain admin functionality off customer-facing servers.
##
#%{ if (play.configuration.getProperty('admin.tools.enabled') == 'full') }%
GET     /admin/printorders                                          controllers.WebsiteControllers.getPrintOrdersAdmin
GET     /admin/printorders/$printOrderId<[0-9]+>                    controllers.WebsiteControllers.getPrintOrderAdmin(printOrderId: Long)
POST    /admin/printorders/$printOrderId<[0-9]+>                    controllers.WebsiteControllers.postPrintOrderAdmin(printOrderId: Long)
POST    /:celebrityUrlSlug/:productUrlSlug/buy-demo                 controllers.WebsiteControllers.postBuyDemoProduct(celebrityUrlSlug: String, productUrlSlug: String)

GET     /assets/*file                                               controllers.EgraphsAssets.at(path=controllers.EgraphsAssets.defaultPath, file)

# Redirect any requests with trailing slashes to the slash-less version.
GET     $resourcePath<.*>/                                          controllers.SlayTrailingSlashesController.slayTrailingSlashes(resourcePath)
